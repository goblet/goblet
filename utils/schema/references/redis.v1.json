{
  "schemas": {
    "FailoverInstanceRequest": {
      "properties": {
        "dataProtectionMode": {
          "description": "Optional. Available data protection modes that the user can choose. If it's unspecified, data protection mode will be LIMITED_DATA_LOSS by default.",
          "enum": [
            "DATA_PROTECTION_MODE_UNSPECIFIED",
            "LIMITED_DATA_LOSS",
            "FORCE_DATA_LOSS"
          ],
          "enumDescriptions": [
            "Defaults to LIMITED_DATA_LOSS if a data protection mode is not specified.",
            "Instance failover will be protected with data loss control. More specifically, the failover will only be performed if the current replication offset diff between primary and replica is under a certain threshold.",
            "Instance failover will be performed without data loss control."
          ],
          "type": "string"
        }
      },
      "id": "FailoverInstanceRequest",
      "type": "object",
      "description": "Request for Failover."
    },
    "GcsDestination": {
      "properties": {
        "uri": {
          "description": "Required. Data destination URI (e.g. 'gs://my_bucket/my_object'). Existing files will be overwritten.",
          "type": "string"
        }
      },
      "id": "GcsDestination",
      "description": "The Cloud Storage location for the output content",
      "type": "object"
    },
    "WeeklyMaintenanceWindow": {
      "description": "Time window in which disruptive maintenance updates occur. Non-disruptive updates can occur inside or outside this window.",
      "type": "object",
      "properties": {
        "startTime": {
          "$ref": "#/schemas/TimeOfDay",
          "description": "Required. Start time of the window in UTC time."
        },
        "day": {
          "enumDescriptions": [
            "The day of the week is unspecified.",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "description": "Required. The day of week that maintenance updates occur.",
          "type": "string",
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        },
        "duration": {
          "description": "Output only. Duration of the maintenance window. The current window is fixed at 1 hour.",
          "format": "google-duration",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "WeeklyMaintenanceWindow"
    },
    "TlsCertificate": {
      "type": "object",
      "description": "TlsCertificate Resource",
      "id": "TlsCertificate",
      "properties": {
        "sha1Fingerprint": {
          "description": "Sha1 Fingerprint of the certificate.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2020-05-18T00:00:00.094Z`.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "expireTime": {
          "format": "google-datetime",
          "description": "Output only. The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2020-05-18T00:00:00.094Z`.",
          "type": "string",
          "readOnly": true
        },
        "cert": {
          "description": "PEM representation.",
          "type": "string"
        },
        "serialNumber": {
          "type": "string",
          "description": "Serial number, as extracted from the certificate."
        }
      }
    },
    "ListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "items": {
            "$ref": "#/schemas/Operation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "id": "ListOperationsResponse"
    },
    "ImportInstanceRequest": {
      "type": "object",
      "properties": {
        "inputConfig": {
          "$ref": "#/schemas/InputConfig",
          "description": "Required. Specify data to be imported."
        }
      },
      "description": "Request for Import.",
      "id": "ImportInstanceRequest"
    },
    "TimeOfDay": {
      "description": "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
      "type": "object",
      "id": "TimeOfDay",
      "properties": {
        "nanos": {
          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
          "format": "int32",
          "type": "integer"
        },
        "minutes": {
          "format": "int32",
          "type": "integer",
          "description": "Minutes of hour of day. Must be from 0 to 59."
        },
        "hours": {
          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "format": "int32",
          "type": "integer"
        },
        "seconds": {
          "format": "int32",
          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
          "type": "integer"
        }
      }
    },
    "MaintenanceSchedule": {
      "type": "object",
      "description": "Upcoming maintenance schedule. If no maintenance is scheduled, fields are not populated.",
      "id": "MaintenanceSchedule",
      "properties": {
        "scheduleDeadlineTime": {
          "description": "Output only. The deadline that the maintenance schedule start time can not go beyond, including reschedule.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The end time of any upcoming scheduled maintenance for this instance.",
          "readOnly": true
        },
        "startTime": {
          "readOnly": true,
          "description": "Output only. The start time of any upcoming scheduled maintenance for this instance.",
          "format": "google-datetime",
          "type": "string"
        },
        "canReschedule": {
          "type": "boolean",
          "description": "If the scheduled maintenance can be rescheduled, default is true.",
          "deprecated": true
        }
      }
    },
    "Instance": {
      "id": "Instance",
      "type": "object",
      "properties": {
        "connectMode": {
          "enumDescriptions": [
            "Not set.",
            "Connect via direct peering to the Memorystore for Redis hosted service.",
            "Connect your Memorystore for Redis instance using Private Service Access. Private services access provides an IP address range for multiple Google Cloud services, including Memorystore."
          ],
          "description": "Optional. The network connect mode of the Redis instance. If not provided, the connect mode defaults to DIRECT_PEERING.",
          "enum": [
            "CONNECT_MODE_UNSPECIFIED",
            "DIRECT_PEERING",
            "PRIVATE_SERVICE_ACCESS"
          ],
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "Not set.",
            "Redis instance is being created.",
            "Redis instance has been created and is fully usable.",
            "Redis instance configuration is being updated. Certain kinds of updates may cause the instance to become unusable while the update is in progress.",
            "Redis instance is being deleted.",
            "Redis instance is being repaired and may be unusable.",
            "Maintenance is being performed on this Redis instance.",
            "Redis instance is importing data (availability may be affected).",
            "Redis instance is failing over (availability may be affected)."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "UPDATING",
            "DELETING",
            "REPAIRING",
            "MAINTENANCE",
            "IMPORTING",
            "FAILING_OVER"
          ],
          "description": "Output only. The current state of this instance.",
          "readOnly": true
        },
        "replicaCount": {
          "description": "Optional. The number of replica nodes. The valid range for the Standard Tier with read replicas enabled is [1-5] and defaults to 2. If read replicas are not enabled for a Standard Tier instance, the only valid value is 1 and the default is 1. The valid value for basic tier is 0 and the default is also 0.",
          "type": "integer",
          "format": "int32"
        },
        "port": {
          "readOnly": true,
          "format": "int32",
          "type": "integer",
          "description": "Output only. The port number of the exposed Redis endpoint."
        },
        "persistenceConfig": {
          "$ref": "#/schemas/PersistenceConfig",
          "description": "Optional. Persistence configuration parameters"
        },
        "redisConfigs": {
          "description": "Optional. Redis configuration parameters, according to http://redis.io/topics/config. Currently, the only supported parameters are: Redis version 3.2 and newer: * maxmemory-policy * notify-keyspace-events Redis version 4.0 and newer: * activedefrag * lfu-decay-time * lfu-log-factor * maxmemory-gb Redis version 5.0 and newer: * stream-node-max-bytes * stream-node-max-entries",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "locationId": {
          "type": "string",
          "description": "Optional. The zone where the instance will be provisioned. If not provided, the service will choose a zone from the specified region for the instance. For standard tier, additional nodes will be added across multiple zones for protection against zonal failures. If specified, at least one node will be provisioned in this zone."
        },
        "readEndpoint": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Hostname or IP address of the exposed readonly Redis endpoint. Standard tier only. Targets all healthy replica nodes in instance. Replication is asynchronous and replica nodes will exhibit some lag behind the primary. Write requests must target 'host'."
        },
        "displayName": {
          "description": "An arbitrary and optional user-provided name for the instance.",
          "type": "string"
        },
        "authEnabled": {
          "description": "Optional. Indicates whether OSS Redis AUTH is enabled for the instance. If set to \"true\" AUTH is enabled on the instance. Default value is \"false\" meaning AUTH is disabled.",
          "type": "boolean"
        },
        "readReplicasMode": {
          "description": "Optional. Read replicas mode for the instance. Defaults to READ_REPLICAS_DISABLED.",
          "type": "string",
          "enum": [
            "READ_REPLICAS_MODE_UNSPECIFIED",
            "READ_REPLICAS_DISABLED",
            "READ_REPLICAS_ENABLED"
          ],
          "enumDescriptions": [
            "If not set, Memorystore Redis backend will default to READ_REPLICAS_DISABLED.",
            "If disabled, read endpoint will not be provided and the instance cannot scale up or down the number of replicas.",
            "If enabled, read endpoint will be provided and the instance can scale up and down the number of replicas. Not valid for basic tier."
          ]
        },
        "labels": {
          "type": "object",
          "description": "Resource labels to represent user provided metadata",
          "additionalProperties": {
            "type": "string"
          }
        },
        "statusMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Additional information about the current status of this instance, if available."
        },
        "readEndpointPort": {
          "description": "Output only. The port number of the exposed readonly redis endpoint. Standard tier only. Write requests should target 'port'.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "authorizedNetwork": {
          "description": "Optional. The full name of the Google Compute Engine [network](https://cloud.google.com/vpc/docs/vpc) to which the instance is connected. If left unspecified, the `default` network will be used.",
          "type": "string"
        },
        "availableMaintenanceVersions": {
          "description": "Optional. The available maintenance versions that an instance could update to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "transitEncryptionMode": {
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "Client to Server traffic encryption enabled with server authentication.",
            "TLS is disabled for the instance."
          ],
          "description": "Optional. The TLS mode of the Redis instance. If not provided, TLS is disabled for the instance.",
          "enum": [
            "TRANSIT_ENCRYPTION_MODE_UNSPECIFIED",
            "SERVER_AUTHENTICATION",
            "DISABLED"
          ]
        },
        "host": {
          "description": "Output only. Hostname or IP address of the exposed Redis endpoint used by clients to connect to the service.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the instance was created.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "memorySizeGb": {
          "type": "integer",
          "description": "Required. Redis memory size in GiB.",
          "format": "int32"
        },
        "secondaryIpRange": {
          "type": "string",
          "description": "Optional. Additional IP range for node placement. Required when enabling read replicas on an existing instance. For DIRECT_PEERING mode value must be a CIDR range of size /28, or \"auto\". For PRIVATE_SERVICE_ACCESS mode value must be the name of an allocated address range associated with the private service access connection, or \"auto\"."
        },
        "customerManagedKey": {
          "description": "Optional. The KMS key reference that the customer provides when trying to create the instance.",
          "type": "string"
        },
        "currentLocationId": {
          "type": "string",
          "description": "Output only. The current zone where the Redis primary node is located. In basic tier, this will always be the same as [location_id]. In standard tier, this can be the zone of any node in the instance.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Required. Unique name of the resource in this scope including project and location using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` Note: Redis instances are managed and addressed at regional level so location_id here refers to a GCP region; however, users may choose which specific zone (or collection of zones for cross-zone instances) an instance should be provisioned in. Refer to location_id and alternative_location_id fields for more details."
        },
        "persistenceIamIdentity": {
          "description": "Output only. Cloud IAM identity used by import / export operations to transfer data to/from Cloud Storage. Format is \"serviceAccount:\". The value may change over time for a given instance so should be checked before each import/export operation.",
          "type": "string",
          "readOnly": true
        },
        "redisVersion": {
          "type": "string",
          "description": "Optional. The version of Redis software. If not provided, latest supported version will be used. Currently, the supported values are: * `REDIS_3_2` for Redis 3.2 compatibility * `REDIS_4_0` for Redis 4.0 compatibility (default) * `REDIS_5_0` for Redis 5.0 compatibility * `REDIS_6_X` for Redis 6.x compatibility"
        },
        "maintenanceVersion": {
          "description": "Optional. The self service update maintenance version. The version is date based such as \"20210712_00_00\".",
          "type": "string"
        },
        "alternativeLocationId": {
          "description": "Optional. If specified, at least one node will be provisioned in this zone in addition to the zone specified in location_id. Only applicable to standard tier. If provided, it must be a different zone from the one provided in [location_id]. Additional nodes beyond the first 2 will be placed in zones selected by the service.",
          "type": "string"
        },
        "maintenancePolicy": {
          "description": "Optional. The maintenance policy for the instance. If not provided, maintenance events can be performed at any time.",
          "$ref": "#/schemas/MaintenancePolicy"
        },
        "reservedIpRange": {
          "type": "string",
          "description": "Optional. For DIRECT_PEERING mode, the CIDR range of internal addresses that are reserved for this instance. Range must be unique and non-overlapping with existing subnets in an authorized network. For PRIVATE_SERVICE_ACCESS mode, the name of one allocated IP address ranges associated with this private service access connection. If not provided, the service will choose an unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29. For READ_REPLICAS_ENABLED the default block size is /28."
        },
        "serverCaCerts": {
          "description": "Output only. List of server CA certificates for the instance.",
          "items": {
            "$ref": "#/schemas/TlsCertificate"
          },
          "type": "array",
          "readOnly": true
        },
        "tier": {
          "type": "string",
          "enum": [
            "TIER_UNSPECIFIED",
            "BASIC",
            "STANDARD_HA"
          ],
          "enumDescriptions": [
            "Not set.",
            "BASIC tier: standalone instance",
            "STANDARD_HA tier: highly available primary/replica instances"
          ],
          "description": "Required. The service tier of the instance."
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/schemas/NodeInfo"
          },
          "description": "Output only. Info per node.",
          "readOnly": true
        },
        "maintenanceSchedule": {
          "description": "Output only. Date and time of upcoming maintenance events which have been scheduled.",
          "$ref": "#/schemas/MaintenanceSchedule",
          "readOnly": true
        },
        "suspensionReasons": {
          "type": "array",
          "description": "Optional. reasons that causes instance in \"SUSPENDED\" state.",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Not set.",
              "Something wrong with the CMEK key provided by customer."
            ],
            "enum": [
              "SUSPENSION_REASON_UNSPECIFIED",
              "CUSTOMER_MANAGED_KEY_ISSUE"
            ]
          }
        }
      },
      "description": "A Memorystore for Redis instance."
    },
    "Location": {
      "description": "A resource that represents a Google Cloud location.",
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Resource ID for the region. For example: \"us-east1\"."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "metadata": {
          "description": "Output only. The set of available zones in the location. The map is keyed by the lowercase ID of each zone, as defined by Compute Engine. These keys can be specified in `location_id` or `alternative_location_id` fields when creating a Redis instance.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "name": {
          "description": "Full resource name for the region. For example: \"projects/example-project/locations/us-east1\".",
          "type": "string"
        }
      },
      "id": "Location",
      "type": "object"
    },
    "NodeInfo": {
      "properties": {
        "zone": {
          "readOnly": true,
          "description": "Output only. Location of the node.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Output only. Node identifying string. e.g. 'node-0', 'node-1'",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "NodeInfo",
      "description": "Node specific properties."
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "id": "Operation",
      "properties": {
        "error": {
          "$ref": "#/schemas/Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "description": "{ `createTime`: The time the operation was created. `endTime`: The time the operation finished running. `target`: Server-defined resource path for the target of the operation. `verb`: Name of the verb executed by the operation. `statusDetail`: Human-readable status of the operation, if any. `cancelRequested`: Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`. `apiVersion`: API version used to start the operation. }",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        }
      }
    },
    "ListLocationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "#/schemas/Location"
          }
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse"
    },
    "OutputConfig": {
      "id": "OutputConfig",
      "properties": {
        "gcsDestination": {
          "$ref": "#/schemas/GcsDestination",
          "description": "Google Cloud Storage destination for output content."
        }
      },
      "description": "The output content",
      "type": "object"
    },
    "ListInstancesResponse": {
      "id": "ListInstancesResponse",
      "type": "object",
      "description": "Response for ListInstances.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "instances": {
          "description": "A list of Redis instances in the project in the specified location, or across all locations. If the `location_id` in the parent field of the request is \"-\", all regions available to the project are queried, and the results aggregated. If in such an aggregated query a location is unavailable, a placeholder Redis entry is included in the response with the `name` field set to a value of the form `projects/{project_id}/locations/{location_id}/instances/`- and the `status` field set to ERROR and `status_message` field set to \"location not available for ListInstances\".",
          "type": "array",
          "items": {
            "$ref": "#/schemas/Instance"
          }
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        }
      }
    },
    "GoogleCloudRedisV1OperationMetadata": {
      "properties": {
        "statusDetail": {
          "description": "Operation status details.",
          "type": "string"
        },
        "apiVersion": {
          "type": "string",
          "description": "API version."
        },
        "verb": {
          "type": "string",
          "description": "Operation verb."
        },
        "target": {
          "type": "string",
          "description": "Operation target."
        },
        "createTime": {
          "description": "Creation timestamp.",
          "type": "string",
          "format": "google-datetime"
        },
        "cancelRequested": {
          "description": "Specifies if cancellation was requested for the operation.",
          "type": "boolean"
        },
        "endTime": {
          "description": "End timestamp.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "description": "Represents the v1 metadata of the long-running operation.",
      "id": "GoogleCloudRedisV1OperationMetadata",
      "type": "object"
    },
    "GoogleCloudRedisV1ZoneMetadata": {
      "description": "Defines specific information for a particular zone. Currently empty and reserved for future use only.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudRedisV1ZoneMetadata"
    },
    "PersistenceConfig": {
      "properties": {
        "persistenceMode": {
          "enum": [
            "PERSISTENCE_MODE_UNSPECIFIED",
            "DISABLED",
            "RDB"
          ],
          "enumDescriptions": [
            "Not set.",
            "Persistence is disabled for the instance, and any existing snapshots are deleted.",
            "RDB based Persistence is enabled."
          ],
          "type": "string",
          "description": "Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used."
        },
        "rdbSnapshotStartTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Optional. Date and time that the first snapshot was/will be attempted, and to which future snapshots will be aligned. If not provided, the current time will be used."
        },
        "rdbNextSnapshotTime": {
          "description": "Output only. The next time that a snapshot attempt is scheduled to occur.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "rdbSnapshotPeriod": {
          "enum": [
            "SNAPSHOT_PERIOD_UNSPECIFIED",
            "ONE_HOUR",
            "SIX_HOURS",
            "TWELVE_HOURS",
            "TWENTY_FOUR_HOURS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "Snapshot every 1 hour.",
            "Snapshot every 6 hours.",
            "Snapshot every 12 hours.",
            "Snapshot every 24 hours."
          ],
          "description": "Optional. Period between RDB snapshots. Snapshots will be attempted every period starting from the provided snapshot start time. For example, a start time of 01/01/2033 06:45 and SIX_HOURS snapshot period will do nothing until 01/01/2033, and then trigger snapshots every day at 06:45, 12:45, 18:45, and 00:45 the next day, and so on. If not provided, TWENTY_FOUR_HOURS will be used as default."
        }
      },
      "id": "PersistenceConfig",
      "description": "Configuration of the persistence functionality.",
      "type": "object"
    },
    "InputConfig": {
      "properties": {
        "gcsSource": {
          "description": "Google Cloud Storage location where input content is located.",
          "$ref": "#/schemas/GcsSource"
        }
      },
      "id": "InputConfig",
      "description": "The input content",
      "type": "object"
    },
    "GcsSource": {
      "id": "GcsSource",
      "description": "The Cloud Storage location for the input content",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Required. Source data URI. (e.g. 'gs://my_bucket/my_object').",
          "type": "string"
        }
      }
    },
    "InstanceAuthString": {
      "properties": {
        "authString": {
          "type": "string",
          "description": "AUTH string set on the instance."
        }
      },
      "id": "InstanceAuthString",
      "description": "Instance AUTH string details.",
      "type": "object"
    },
    "Status": {
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status"
    },
    "MaintenancePolicy": {
      "id": "MaintenancePolicy",
      "type": "object",
      "properties": {
        "updateTime": {
          "description": "Output only. The time when the policy was last updated.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "weeklyMaintenanceWindow": {
          "description": "Optional. Maintenance window that is applied to resources covered by this policy. Minimum 1. For the current version, the maximum number of weekly_window is expected to be one.",
          "type": "array",
          "items": {
            "$ref": "#/schemas/WeeklyMaintenanceWindow"
          }
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time when the policy was created.",
          "type": "string"
        }
      },
      "description": "Maintenance policy for an instance."
    },
    "UpgradeInstanceRequest": {
      "properties": {
        "redisVersion": {
          "type": "string",
          "description": "Required. Specifies the target version of Redis software to upgrade to."
        }
      },
      "description": "Request for UpgradeInstance.",
      "id": "UpgradeInstanceRequest",
      "type": "object"
    },
    "ExportInstanceRequest": {
      "id": "ExportInstanceRequest",
      "description": "Request for Export.",
      "type": "object",
      "properties": {
        "outputConfig": {
          "description": "Required. Specify data to be exported.",
          "$ref": "#/schemas/OutputConfig"
        }
      }
    },
    "GoogleCloudRedisV1LocationMetadata": {
      "description": "This location metadata represents additional configuration options for a given location where a Redis instance may be created. All fields are output only. It is returned as content of the `google.cloud.location.Location.metadata` field.",
      "type": "object",
      "id": "GoogleCloudRedisV1LocationMetadata",
      "properties": {
        "availableZones": {
          "readOnly": true,
          "description": "Output only. The set of available zones in the location. The map is keyed by the lowercase ID of each zone, as defined by GCE. These keys can be specified in `location_id` or `alternative_location_id` fields when creating a Redis instance.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/schemas/GoogleCloudRedisV1ZoneMetadata"
          }
        }
      }
    },
    "RescheduleMaintenanceRequest": {
      "description": "Request for RescheduleMaintenance.",
      "properties": {
        "scheduleTime": {
          "type": "string",
          "description": "Optional. Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example `2012-11-15T16:19:00.094Z`.",
          "format": "google-datetime"
        },
        "rescheduleType": {
          "type": "string",
          "description": "Required. If reschedule type is SPECIFIC_TIME, must set up schedule_time as well.",
          "enumDescriptions": [
            "Not set.",
            "If the user wants to schedule the maintenance to happen now.",
            "If the user wants to use the existing maintenance policy to find the next available window.",
            "If the user wants to reschedule the maintenance to a specific time."
          ],
          "enum": [
            "RESCHEDULE_TYPE_UNSPECIFIED",
            "IMMEDIATE",
            "NEXT_AVAILABLE_WINDOW",
            "SPECIFIC_TIME"
          ]
        }
      },
      "type": "object",
      "id": "RescheduleMaintenanceRequest"
    },
    "ReconciliationOperationMetadata": {
      "properties": {
        "exclusiveAction": {
          "enum": [
            "UNKNOWN_REPAIR_ACTION",
            "DELETE",
            "RETRY"
          ],
          "enumDeprecated": [
            false,
            true,
            false
          ],
          "enumDescriptions": [
            "Unknown repair action.",
            "The resource has to be deleted. When using this bit, the CLH should fail the operation. DEPRECATED. Instead use DELETE_RESOURCE OperationSignal in SideChannel.",
            "This resource could not be repaired but the repair should be tried again at a later time. This can happen if there is a dependency that needs to be resolved first- e.g. if a parent resource must be repaired before a child resource."
          ],
          "description": "Excluisive action returned by the CLH.",
          "type": "string"
        },
        "deleteResource": {
          "description": "DEPRECATED. Use exclusive_action instead.",
          "deprecated": true,
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Operation metadata returned by the CLH during resource state reconciliation.",
      "id": "ReconciliationOperationMetadata"
    }
  },
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "basePath": "",
  "kind": "discovery#restDescription",
  "ownerName": "Google",
  "protocol": "rest",
  "description": "Creates and manages Redis instances on the Google Cloud Platform.",
  "servicePath": "",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "instances": {
              "methods": {
                "delete": {
                  "description": "Deletes a specific Redis instance. Instance stops serving and data is deleted.",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "id": "redis.projects.locations.instances.delete",
                  "parameters": {
                    "name": {
                      "description": "Required. Redis instance resource name using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers to a GCP region.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "#/schemas/Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE"
                },
                "get": {
                  "description": "Gets the details of a specific Redis instance.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Redis instance resource name using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers to a GCP region.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "response": {
                    "$ref": "#/schemas/Instance"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "redis.projects.locations.instances.get",
                  "path": "v1/{+name}"
                },
                "list": {
                  "path": "v1/{+parent}/instances",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of items to return. If not specified, a default value of 1000 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's `next_page_token` to determine if there are more instances left to be queried.",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. The resource name of the instance location using the form: `projects/{project_id}/locations/{location_id}` where `location_id` refers to a GCP region.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The `next_page_token` value returned from a previous ListInstances request, if any.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "#/schemas/ListInstancesResponse"
                  },
                  "httpMethod": "GET",
                  "id": "redis.projects.locations.instances.list",
                  "description": "Lists all Redis instances owned by a project in either the specified location (region) or all locations. The location should have the following format: * `projects/{project_id}/locations/{location_id}` If `location_id` is specified as `-` (wildcard), then all regions available to the project are queried, and the results are aggregated."
                },
                "getAuthString": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/authString",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Redis instance resource name using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers to a GCP region.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the AUTH string for a Redis instance. If AUTH is not enabled for the instance the response will be empty. This information is not included in the details returned to GetInstance.",
                  "id": "redis.projects.locations.instances.getAuthString",
                  "response": {
                    "$ref": "#/schemas/InstanceAuthString"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}/authString"
                },
                "patch": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "description": "Updates the metadata and configuration of a specific Redis instance. Completed longrunning.Operation will contain the new instance object in the response field. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "updateMask": {
                      "description": "Required. Mask of fields to update. At least one path must be supplied in this field. The elements of the repeated paths field may only include these fields from Instance: * `displayName` * `labels` * `memorySizeGb` * `redisConfig` * `replica_count`",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Unique name of the resource in this scope including project and location using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` Note: Redis instances are managed and addressed at regional level so location_id here refers to a GCP region; however, users may choose which specific zone (or collection of zones for cross-zone instances) an instance should be provisioned in. Refer to location_id and alternative_location_id fields for more details.",
                      "required": true
                    }
                  },
                  "id": "redis.projects.locations.instances.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "#/schemas/Instance"
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "#/schemas/Operation"
                  },
                  "httpMethod": "PATCH"
                },
                "rescheduleMaintenance": {
                  "description": "Reschedule maintenance for a given instance in a given project and location.",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. Redis instance resource name using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers to a GCP region.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rescheduleMaintenance",
                  "response": {
                    "$ref": "#/schemas/Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "redis.projects.locations.instances.rescheduleMaintenance",
                  "path": "v1/{+name}:rescheduleMaintenance",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "#/schemas/RescheduleMaintenanceRequest"
                  }
                },
                "export": {
                  "id": "redis.projects.locations.instances.export",
                  "path": "v1/{+name}:export",
                  "parameters": {
                    "name": {
                      "description": "Required. Redis instance resource name using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers to a GCP region.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "#/schemas/ExportInstanceRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:export",
                  "description": "Export Redis instance data into a Redis RDB format file in Cloud Storage. Redis will continue serving during this operation. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "#/schemas/Operation"
                  }
                },
                "upgrade": {
                  "httpMethod": "POST",
                  "id": "redis.projects.locations.instances.upgrade",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "#/schemas/Operation"
                  },
                  "description": "Upgrades Redis instance to the newer Redis version specified in the request.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Redis instance resource name using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers to a GCP region.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "#/schemas/UpgradeInstanceRequest"
                  },
                  "path": "v1/{+name}:upgrade",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:upgrade"
                },
                "create": {
                  "parameters": {
                    "instanceId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The logical name of the Redis instance in the customer project with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-40 characters. * Must end with a number or a letter. * Must be unique within the customer project / location"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The resource name of the instance location using the form: `projects/{project_id}/locations/{location_id}` where `location_id` refers to a GCP region.",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/instances",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "#/schemas/Operation"
                  },
                  "description": "Creates a Redis instance based on the specified tier and memory size. By default, the instance is accessible from the project's [default network](https://cloud.google.com/vpc/docs/vpc). The creation is executed asynchronously and callers may check the returned operation to track its progress. Once the operation is completed the Redis instance will be fully functional. Completed longrunning.Operation will contain the new instance object in the response field. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "#/schemas/Instance"
                  },
                  "id": "redis.projects.locations.instances.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "failover": {
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:failover",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Redis instance resource name using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers to a GCP region.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "id": "redis.projects.locations.instances.failover",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "#/schemas/FailoverInstanceRequest"
                  },
                  "path": "v1/{+name}:failover",
                  "response": {
                    "$ref": "#/schemas/Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Initiates a failover of the primary node to current replica node for a specific STANDARD tier Cloud Memorystore for Redis instance."
                },
                "import": {
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:import",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "redis.projects.locations.instances.import",
                  "path": "v1/{+name}:import",
                  "request": {
                    "$ref": "#/schemas/ImportInstanceRequest"
                  },
                  "response": {
                    "$ref": "#/schemas/Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Import a Redis RDB snapshot file from Cloud Storage into a Redis instance. Redis may stop serving during this operation. Instance state will be IMPORTING for entire operation. When complete, the instance will contain only data from the imported file. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation.",
                  "parameters": {
                    "name": {
                      "description": "Required. Redis instance resource name using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` where `location_id` refers to a GCP region.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource to be deleted."
                    }
                  },
                  "response": {
                    "$ref": "#/schemas/Empty"
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "redis.projects.locations.operations.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "list": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "#/schemas/ListOperationsResponse"
                  },
                  "id": "redis.projects.locations.operations.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation's parent resource."
                    }
                  },
                  "path": "v1/{+name}/operations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET"
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "#/schemas/Operation"
                  },
                  "id": "redis.projects.locations.operations.get",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true
                    }
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                },
                "cancel": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "id": "redis.projects.locations.operations.cancel",
                  "path": "v1/{+name}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "#/schemas/Empty"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            }
          },
          "methods": {
            "list": {
              "response": {
                "$ref": "#/schemas/ListLocationsResponse"
              },
              "parameters": {
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string",
                  "required": true
                },
                "pageToken": {
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}/locations",
              "id": "redis.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "response": {
                "$ref": "#/schemas/Location"
              },
              "description": "Gets information about a location.",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "id": "redis.projects.locations.get",
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Resource name for the location.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ]
            }
          }
        }
      }
    }
  },
  "baseUrl": "https://redis.googleapis.com/",
  "title": "Google Cloud Memorystore for Redis API",
  "name": "redis",
  "mtlsRootUrl": "https://redis.mtls.googleapis.com/",
  "version": "v1",
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/memorystore/docs/redis/",
  "batchPath": "batch",
  "revision": "20230905",
  "canonicalName": "Cloud Redis",
  "parameters": {
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "alt": {
      "default": "json",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response."
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "id": "redis:v1",
  "rootUrl": "https://redis.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  }
}